 1| import os
 2| import sys
 3| import pandas as pd
 4| from sklearn.model_selection import train_test_split
 5| from sklearn.impute import SimpleImputer
 6| from sklearn.preprocessing import LabelEncoder
 7| from sklearn.ensemble import RandomForestClassifier
 8| from sklearn.metrics import accuracy_score, classification_report
 9| 
10| current_dir = os.path.dirname(os.path.abspath(__file__))
11| parent_dir = os.path.dirname(current_dir)
12| sys.path.append(parent_dir)
13| 
14| from utils import get_project_root
15| 
16| project_root = get_project_root()
17| 
18| raw_data_file = os.path.join(project_root, "datasets", "compas_scores", "compas-scores-two-years.csv")
19| raw_data = pd.read_csv(raw_data_file)
20| 
21| X = raw_data.drop('score_text', axis=1)
22| y = raw_data['score_text']
23| 
24| label_encoders = {}
25| for column in X.select_dtypes(include=['object']).columns:
26|     le = LabelEncoder()
27|     X[column] = le.fit_transform(X[column].astype(str))
28|     label_encoders[column] = le
29| 
30| le_y = LabelEncoder()
31| y = le_y.fit_transform(y)
32| 
33| X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
34| 
35| imputer = SimpleImputer(strategy='most_frequent')
36| X_train_imputed = imputer.fit_transform(X_train)
37| X_test_imputed = imputer.transform(X_test)
38| 
39| clf = RandomForestClassifier(random_state=42)
40| clf.fit(X_train_imputed, y_train)
41| y_pred = clf.predict(X_test_imputed)
42| 
43| print("Accuracy:", accuracy_score(y_test, y_pred))
44| print("Classification report:", classification_report(y_test, y_pred))
45| 