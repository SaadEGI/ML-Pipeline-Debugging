 1| import sys
 2| import os
 3| import pandas as pd
 4| from sklearn.model_selection import train_test_split
 5| from sklearn.ensemble import RandomForestClassifier
 6| from sklearn.metrics import accuracy_score, classification_report
 7| from sklearn.preprocessing import LabelEncoder
 8| 
 9| 
10| current_dir = os.path.dirname(os.path.abspath(__file__))
11| parent_dir = os.path.dirname(current_dir)
12| sys.path.append(parent_dir)
13| 
14| from utils import get_project_root
15| 
16| 
17| project_root = get_project_root()
18| 
19| 
20| raw_data_file = os.path.join(project_root, "datasets", "titanic", "data.csv")
21| data = pd.read_csv(raw_data_file)
22| 
23| X = data.drop(['Survived', 'Name', 'Ticket', 'Cabin', 'PassengerId'], axis=1)
24| y = data['Survived']
25| 
26| 
27| X = pd.get_dummies(X, columns=['Sex', 'Embarked'])
28| X['Age'] = X['Age'].fillna(X['Age'].mean())  
29| 
30| 
31| label_encoder = LabelEncoder()
32| y_encoded = label_encoder.fit_transform(y)
33| 
34| 
35| X_train, X_test, y_train, y_test = train_test_split(X, y_encoded, test_size=0.2, random_state=42)
36| 
37| 
38| clf = RandomForestClassifier(random_state=42)
39| clf.fit(X_train, y_train)
40| y_pred = clf.predict(X_test)
41| 
42| 
43| print("Accuracy:", accuracy_score(y_test, y_pred))
44| print("Classification report:", classification_report(y_test, y_pred))